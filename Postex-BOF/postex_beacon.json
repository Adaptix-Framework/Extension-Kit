{
  "name": "PostEx",
  "description": "BOFs for post exploitation",
  "extensions": [
    {
      "type": "command",
      "agents": ["beacon"],

      "command": "addfirewallrule",
      "description": "Add a new inbound or outbound firewall rule using COM",
      "message": "BOF implementation: addfirewallrule",
      "example": "addfirewallrule in 80 \"ExampleRuleName1\" \"ExampleGroup1\" \"Test rule\"",
      "args" : [
            "STRING <direction> (in)",
            "STRING <port>",
            "STRING <rulename> (testrule)",
            "STRING <rulegroup> (testgroup)",
            "STRING <description> (testdescription)"
      ],
      "exec": "execute bof $EXT_DIR()/_bin/addfirewallrule.$ARCH().o $PACK_BOF(CSTR {direction}, WSTR {port}, WSTR {rulename}, WSTR {rulegroup}, WSTR {description})"
    },
    {
      "type": "command",
      "agents": ["beacon"],

      "command": "screenshot_bof",
      "description": "Alternative screenshot capability that does not do fork n run by @codex_tf2",
      "message": "Task: Screenshot BOF",
      "example": "screenshot screen1 812",
        "args": [
          "STRING <-n note> (ScreenshotBOF) {Screenshot caption}",
          "INT <-p pid> (0) {PID of the application whose window screenshot will be taken. If 0, then a full-screen screenshot}"
        ],
        "exec": "execute bof $EXT_DIR()/_bin/Screenshot.$ARCH().o $PACK_BOF(CSTR {note}, INT {pid})"
    }
  ]
}
